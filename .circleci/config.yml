version: 2.1
#orbs:
  #SonarCloud: sonarsource/sonarcloud@1.0.0

parameters:
  chromedriver-install-dir:
    default: /usr/local/bin
    description: |
      Directory in which to install Chromedriver
    type: string
  debug:
    default: false
    description: |
      Extra output for orb developers
    type: boolean
  firefox-alpine-version:
    default: stable
    description: >
      For Alpine Linux users, select a Firefox version: either the latest stable
      release, or the latest Extended Support Release. For more information, see
      https://mozilla.org/firefox/organizations and
      https://pkgs.alpinelinux.org/packages?name=firefox*
    enum:
      - stable
      - esr
    type: enum
  firefox-install-dir:
    default: /usr/local/bin
    description: |
      Directory in which to install Firefox
    type: string
  firefox-version:
    default: latest
    description: >
      Version of Firefox to install, defaults to the latest stable release. To
      install an older release, specify a full semantic version number, e.g.,
      66.0.3, 53.0, etc. Note: version-selection is not supported for Alpine
      Linux-based execution environments, as Mozilla's Firefox binaries are not
      compiled to run on Alpine. Use the `alpine-version` parameter to select
      from a limited number of Alpine-based Firefox packages. Otherwise, for a
      full list of releases, see the following:
      https://archive.mozilla.org/pub/firefox/releases/
    type: string
  install-firefox:
    default: true
    description: Install Firefox?
    type: boolean
  alpine-version:
    default: stable
    description: >
      For Alpine Linux users, select a Firefox version: either the latest stable
      release, or the latest Extended Support Release. For more information, see
      https://mozilla.org/firefox/organizations and
      https://pkgs.alpinelinux.org/packages?name=firefox*
    enum:
      - stable
      - esr
    type: enum
  install-dir:
    default: /usr/local/bin
    description: |
      Directory in which to install Firefox
    type: string
  version:
    default: latest
    description: >
      Version of Firefox to install, defaults to the latest stable release. To
      install an older release, specify a full semantic version number, ESR or
      otherwise, e.g., 66.0.3, 52.0.1esr, 53.0, etc. Note: version-selection is
      not supported for Alpine Linux-based execution environments, as Mozilla's
      Firefox binaries are not compiled to run on Alpine. Use the
      `alpine-version` parameter to select from a limited number of Alpine-based
      Firefox packages. Otherwise, for a full list of releases, see:
      https://archive.mozilla.org/pub/firefox/releases/
    type: string

jobs:
  build:
    docker:
      - image: maven:3-jdk-11
      - image: circleci/postgres:11.5-alpine-ram

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      TEST_DATABASE_URL: postgresql://postgres@localhost/circle_test

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install jq because it is needed for firefox install
      - run: apt-get update
      - run: apt-get install -y jq
      - run: which jq

      # Setup the database
      - run: apt-get install wget ca-certificates
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
      - run: sh -c 'echo "deb [trusted=yes] http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
      - run: apt-get -y install postgresql-client-11
      - run: whoami
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "CREATE TABLE test (name char(25));"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "INSERT INTO test VALUES ('John'), ('Joanna'), ('Jennifer');"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "SELECT * from test"

      - run:
          name: Get dependencies for Maven project
          command: |
            mvn dependency:go-offline

#      - when:
#          condition: <<parameters.install-firefox>>
#          steps:
#            - install-firefox:
#                alpine-version: <<parameters.firefox-alpine-version>>
#                debug: <<parameters.debug>>
#                install-dir: <<parameters.firefox-install-dir>>
#                version: <<parameters.firefox-version>>
#
#      - run:
#          command: >
#            if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Build
          command: |
            mvn compile

      #- run:
      #    name: Analyze on SonarCloud
      #    command: mvn verify sonar:sonar -Dsonar.projectKey=bsjoberg_ATM_Example_Attempt_5 -Dsonar.organization=bsjoberg -Dsonar.host.url=https://sonarcloud.io

  test:
    docker:
      - image: maven:3-jdk-11
      - image: circleci/postgres:11.5-alpine-ram

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Install firefox.
    - run:
        command: >
          if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi


          if [[ <<parameters.firefox-version>> == "latest" ]]; then
            # extract latest version from mozilla product details API
            $SUDO apt-get install -y jq

            FIREFOX_VERSION_STRING=$(curl \
              https://product-details.mozilla.org/1.0/firefox_versions.json | \
              jq '.LATEST_FIREFOX_VERSION')

            # strip leading/trailing "
            temp="${FIREFOX_VERSION_STRING%\"}"
            FIREFOX_VERSION="${temp#\"}"
          else
            FIREFOX_VERSION=<<parameters.firefox-version>>
          fi


          FIREFOX_URL_BASE="https://archive.mozilla.org/pub/firefox/releases/$FIREFOX_VERSION"


          # import public key

          curl --silent --show-error --location --fail --retry 3
          "$FIREFOX_URL_BASE/KEY" | gpg --import


          # download shasum256

          curl -O --silent --show-error --location --fail --retry 3
          "$FIREFOX_URL_BASE/SHA256SUMS.asc"

          curl -O --silent --show-error --location --fail --retry 3
          "$FIREFOX_URL_BASE/SHA256SUMS"


          # verify shasum256

          gpg --verify SHA256SUMS.asc SHA256SUMS

          rm -rf SHA256SUMS.asc


          # download firefox

          FIREFOX_FILE="firefox-$FIREFOX_VERSION.tar.bz2"

          FIREFOX_FILE_LOCATION="linux-x86_64/en-US/$FIREFOX_FILE"

          FIREFOX_FILE_NAME="linux-x86_64-en-US-$FIREFOX_FILE"


          curl --silent --show-error --location --fail --retry 3 \
            --output "$FIREFOX_FILE_NAME.asc" \
            "$FIREFOX_URL_BASE/linux-x86_64/en-US/$FIREFOX_FILE.asc"

          curl --silent --show-error --location --fail --retry 3 \
            --output "$FIREFOX_FILE_NAME" \
            "$FIREFOX_URL_BASE/linux-x86_64/en-US/$FIREFOX_FILE"

          # verify download archive

          gpg --verify "$FIREFOX_FILE_NAME.asc" "$FIREFOX_FILE_NAME"

          rm -rf "$FIREFOX_FILE_NAME.asc"


          sed -i 's%linux-x86_64/en-US/firefox%linux-x86_64-en-US-firefox%g'
          SHA256SUMS

          grep "$FIREFOX_FILE_NAME" SHA256SUMS | sha256sum -c -

          rm -rf SHA256SUMS


          # setup firefox installation

          $SUDO tar -xvjf "$FIREFOX_FILE_NAME" -C /opt

          rm -rf "$FIREFOX_FILE_NAME"


          $SUDO ln -s /opt/firefox/firefox /usr/local/bin/firefox

          $SUDO apt-get install -y libgtk3.0-cil-dev libasound2 libasound2
          libdbus-glib-1-2 libdbus-1-3


          # verify version

          firefox --version
        name: Install Firefox

      - run: which firefox

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-


      - run: mkdir test-reports

      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.9.1.jar

      - run:
          name: Start Selenium
          command: java -jar selenium-server-standalone-3.9.1.jar -log test-reports/selenium.log
          background: true

      - run:
          name: Get dependencies for Maven project
          command: |
            mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Test
          command: |
            mvn test

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - test